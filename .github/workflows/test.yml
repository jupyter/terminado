name: Tests

on:
  push:
    branches: ["main"]
  pull_request:
  schedule:    
    - cron: "0 8 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "pypy-3.7"]
        exclude:
          - os: windows
            python-version: "pypy-3.7"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: "x64"
      - name: Upgrade packaging dependencies
        run: |
          pip install --upgrade pip setuptools wheel --user
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-
      - name: Install the Python dependencies
        run: |
          pip install -e .[test]
      - name: List installed packages
        run: |
          pip freeze
          pip check
      - name: Run the tests
        if: ${{ matrix.os != 'windows' }}
        run: |
          pytest -vv -s || pytest -vv -s --lf
      - name: Run basic test on Windows
        if: ${{ matrix.os == 'windows' }}
        run: |
          pytest -vv || pytest -vv --lf
